{"ast":null,"code":"import _objectSpread from \"/media/sabuj/Work/Contact-keeper/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/media/sabuj/Work/Contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/media/sabuj/Work/Contact-keeper/client/src/Components/Contacts/ContactFrom.jsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport ContactContext from \"../../Context/Contact/ContactContext\";\n\nconst ContactFrom = () => {\n  // * useContaxt\n  const contactContext = useContext(ContactContext);\n  const addContact = contactContext.addContact,\n        current = contactContext.current,\n        clearCurrent = contactContext.clearCurrent,\n        updateContact = contactContext.updateContact; // * useEffect\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        type: \"personal\"\n      });\n    } // * useEffect Hook dependency use jokon kaj ta babbar hobe tokon / notun kore selete kora hobe\n\n  }, [contactContext, current]); // * declear contact state\n\n  const _useState = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    type: \"personal\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        contact = _useState2[0],\n        setContact = _useState2[1];\n\n  const name = contact.name,\n        email = contact.email,\n        phone = contact.phone,\n        type = contact.type; // * Change contact value\n\n  const hendelChange = e => {\n    setContact(_objectSpread({}, contact, {\n      [e.target.name]: e.target.value\n    }));\n  }; // * onSubmite contact\n\n\n  const onsubmit = e => {\n    e.preventDefault();\n\n    if (current == null) {\n      addContact(contact);\n    } else {\n      updateContact(contact);\n    }\n\n    setContact({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      type: \"personal\"\n    });\n    clearCurrent();\n  }; // * clear current value\n\n\n  const clearAll = () => clearCurrent();\n\n  return React.createElement(\"form\", {\n    onSubmit: onsubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, current ? \"Edit Contact\" : \"Add Contact\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"name\",\n    value: name,\n    name: \"name\",\n    onChange: hendelChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: hendelChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"phone\",\n    name: \"phone\",\n    value: phone,\n    onChange: hendelChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Contact Type\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    onChange: hendelChange,\n    checked: type == \"personal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), \" \", \"Personal\", \" \", React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    onChange: hendelChange,\n    checked: type === \"professional\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), \" \", \"Professional\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: current ? \"Update Contact\" : \"Add Contact\",\n    className: \"btn-block btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), current && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Clear\")));\n};\n\nexport default ContactFrom;","map":{"version":3,"sources":["/media/sabuj/Work/Contact-keeper/client/src/Components/Contacts/ContactFrom.jsx"],"names":["React","useState","useContext","useEffect","ContactContext","ContactFrom","contactContext","addContact","current","clearCurrent","updateContact","setContact","name","email","phone","type","contact","hendelChange","e","target","value","onsubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport ContactContext from \"../../Context/Contact/ContactContext\";\n\nconst ContactFrom = () => {\n  // * useContaxt\n  const contactContext = useContext(ContactContext);\n  const { addContact, current, clearCurrent, updateContact } = contactContext;\n\n  // * useEffect\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        type: \"personal\"\n      });\n    }\n\n    // * useEffect Hook dependency use jokon kaj ta babbar hobe tokon / notun kore selete kora hobe\n  }, [contactContext, current]);\n\n  // * declear contact state\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    type: \"personal\"\n  });\n  const { name, email, phone, type } = contact;\n\n  // * Change contact value\n  const hendelChange = e => {\n    setContact({ ...contact, [e.target.name]: e.target.value });\n  };\n\n  // * onSubmite contact\n  const onsubmit = e => {\n    e.preventDefault();\n    if (current == null) {\n      addContact(contact);\n    } else {\n      updateContact(contact);\n    }\n    setContact({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      type: \"personal\"\n    });\n    clearCurrent();\n  };\n\n  // * clear current value\n  const clearAll = () => clearCurrent();\n\n  return (\n    <form onSubmit={onsubmit}>\n      <h2 className=\"text-primary text-center\">\n        {current ? \"Edit Contact\" : \"Add Contact\"}\n      </h2>\n      <input\n        type=\"text\"\n        placeholder=\"name\"\n        value={name}\n        name=\"name\"\n        onChange={hendelChange}\n      />\n      <input\n        type=\"email\"\n        placeholder=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={hendelChange}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"phone\"\n        name=\"phone\"\n        value={phone}\n        onChange={hendelChange}\n      />\n      <h5>Contact Type</h5>\n      <input\n        type=\"radio\"\n        name=\"type\"\n        value=\"personal\"\n        onChange={hendelChange}\n        checked={type == \"personal\"}\n      />{\" \"}\n      Personal{\" \"}\n      <input\n        type=\"radio\"\n        name=\"type\"\n        value=\"professional\"\n        onChange={hendelChange}\n        checked={type === \"professional\"}\n      />{\" \"}\n      Professional\n      <div>\n        <input\n          type=\"submit\"\n          value={current ? \"Update Contact\" : \"Add Contact\"}\n          className=\"btn-block btn btn-primary\"\n        />\n      </div>\n      {current && (\n        <div>\n          <button className=\"btn btn-light btn-block\" onClick={clearAll}>\n            Clear\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default ContactFrom;\n"]},"metadata":{},"sourceType":"module"}