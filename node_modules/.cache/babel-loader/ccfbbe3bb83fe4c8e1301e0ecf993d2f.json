{"ast":null,"code":"import _slicedToArray from \"/media/sabuj/Work/Contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/media/sabuj/Work/Contact-keeper/client/src/Context/Contact/ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport uuid from \"uuid\";\nimport ContactContext from \"./ContactContext\";\nimport ContectReducer from \"./ContectReducer\";\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTANT, FILTER_CONTACT, CLEAR_FILTER, SET_ALERT, REMOVE_ALERT } from \"../Type\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: \"sabuj\",\n      email: \"sabuj@gmail.com\",\n      phone: \"123456\",\n      type: \"personal\"\n    }, {\n      id: 2,\n      name: \"abir\",\n      email: \"abir@gmail.com\",\n      phone: \"123456\",\n      type: \"professional\"\n    }, {\n      id: 3,\n      name: \"fahad\",\n      email: \"fahad@gmail.com\",\n      phone: \"123456\",\n      type: \"personal\"\n    }]\n  };\n\n  const _useReducer = useReducer(ContectReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // ? Add contact\n  //// Delete contact\n  // ? set current contact\n  //// clear current contact\n  // * update contact\n  // ! Filter contact\n  //// Clear contact\n\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/media/sabuj/Work/Contact-keeper/client/src/Context/Contact/ContactState.js"],"names":["React","useReducer","uuid","ContactContext","ContectReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTANT","FILTER_CONTACT","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","ContactState","props","initialState","contacts","id","name","email","phone","type","state","dispatch","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,cANF,EAOEC,YAPF,EAQEC,SARF,EASEC,YATF,QAUO,SAVP;;AAYA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,KAAK,EAAE,iBAHT;AAIEC,MAAAA,KAAK,EAAE,QAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KADQ,EAQR;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,MAFR;AAGEC,MAAAA,KAAK,EAAE,gBAHT;AAIEC,MAAAA,KAAK,EAAE,QAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KARQ,EAeR;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,OAFR;AAGEC,MAAAA,KAAK,EAAE,iBAHT;AAIEC,MAAAA,KAAK,EAAE,QAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KAfQ;AADS,GAArB;;AAD4B,sBA0BFrB,UAAU,CAACG,cAAD,EAAiBY,YAAjB,CA1BR;AAAA;AAAA,QA0BrBO,KA1BqB;AAAA,QA0BdC,QA1Bc,oBA2B5B;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEP,MAAAA,QAAQ,EAAEM,KAAK,CAACN;AAAlB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACU,QADT,CADF;AAKD,CAvCD;;AAyCA,eAAeX,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport uuid from \"uuid\";\nimport ContactContext from \"./ContactContext\";\nimport ContectReducer from \"./ContectReducer\";\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTANT,\n  FILTER_CONTACT,\n  CLEAR_FILTER,\n  SET_ALERT,\n  REMOVE_ALERT\n} from \"../Type\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [\n      {\n        id: 1,\n        name: \"sabuj\",\n        email: \"sabuj@gmail.com\",\n        phone: \"123456\",\n        type: \"personal\"\n      },\n      {\n        id: 2,\n        name: \"abir\",\n        email: \"abir@gmail.com\",\n        phone: \"123456\",\n        type: \"professional\"\n      },\n      {\n        id: 3,\n        name: \"fahad\",\n        email: \"fahad@gmail.com\",\n        phone: \"123456\",\n        type: \"personal\"\n      }\n    ]\n  };\n  const [state, dispatch] = useReducer(ContectReducer, initialState);\n  // ? Add contact\n  //// Delete contact\n  // ? set current contact\n  //// clear current contact\n  // * update contact\n  // ! Filter contact\n  //// Clear contact\n  return (\n    <ContactContext.Provider value={{ contacts: state.contacts }}>\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}